$0  当前脚本的名称
$1  获取脚本命令传过来的参数
$2
$3
$#  获取参数个数

[root@xxx myshell]# xx=aa
[root@xxx myshell]# echo xx
xx
[root@xxx myshell]# echo $xx
aa
[root@xxx myshell]# 


unset xx  取消这个变量了

查看系统全局环境变量
env

声明全局变量
xx=aa
export xx   将这个变量提升成全局的

readonly b=5  定义只读变量

默认shell
[root@xxx myshell]# echo $SHELL
/bin/bash



""   里面有变量  那么就当变量处理
''   只做字符串处理

``  $(())  返回里面包含命令的结果

x=1
y=2
echo $[x+y]

echo $[x+=y]
echo $(( 5+6 ))

执行 hello.sh
./hello.sh         新开一个bash 环境执行
.  hello.sh        同一个bash 环境执行
source hello.sh    同一个bash 环境执行



算术比较运算符
-eq  等于
-ne  不等于
-lt  小于
-le   小于等于
-gt   大于
-ge   大于等于

按照文件类型判断
-e  文件是否存在
-f  文件是否存在 并是一个常规的文件
-d  文件是否存在 并是一个目录


三目运算符
a=15
[root@xxx myshell]# [ $a -lt 20 ] && echo 'a<20' || echo 'a>20'
a<20

逻辑and    [ $a -lg 20   -a  $a -gt 10]   and连接
逻辑or     [ $a -lg 20   -o  $a -gt 10]   or连接


if 判断

if [ 条件判断 ]; then

fi


if [ 条件判断 ];then

elif [ 条件判断 ];then

else

fi


if [ "$1"x = "$2"x ];then   这样写法 是为了防止变量不存在  给他一个默认值

fi

switch case：
case $1 in
 1) 
    echo "one"
;;
2) 
    echo "two"
;;
*) 
    echo "none"      这相当于default分支
;;











