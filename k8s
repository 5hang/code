*****************Master 主节点 + node工作节点**********************************
1:master 组件
*apiserver   集群统一的入口，以restful 方式，交给etcd存储
*scheduler   节点调度，选择node节点应用部署
*controller-manager  处理集群中常规后台的任务，一个资源对应一个控制器
*etcd  存储系统，用于保存集群相关的数据

2：node组件
* kubeelet  master排到node节点的代表，管理本机容器
*kube-proxy 提供网络代理，负载均衡操作的

****************************************** k8s 核心的概念************************ 
1,pod   *最小的部署单元*一组容器的集合*共享网络*生命周期短暂
2，controller *确保预期的pod副本的数量*无状态的应用部署*有状态应用部署*
              *确保所有node运行同一个pod
3，service    *定义一组pod的访问规则


*********************************************************************************
                              方式1：kubeadm 搭建k8s 
*********************************************************************************


----001):
          yum update -y
          yum install wget -y
----002):关闭swap分区
          swapoff -a
          sed -ri 's/.*swap.*/#&/' /etc/fstab  永久
----003):关闭防火墙
          systemctl stop firewalld
          systemctl disable firewalld 

----004):关闭selinux
          sed -i 's/enforcing/disabled/'  /etc/selinux/config  永久关闭
          setenforce 0

----005):设置主机名
          hostnamectl set-hostname name
          执行bash  命令窗口名字就变化了

----006):仅仅在master节点修改hosts文件
          cat >> /etc/hosts <<EOF
          192.168.13.134 k8s-master
          192.168.13.135 k8s-node1
          192.168.13.136 k8s-node2
          EOF


----007):将桥接ipv4 流量传到iptables的链
          cat > /etc/sysctl.d/k8s.conf  << EOF
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables  = 1
          EOF

          sysctl --system   生效

----008):同步时间
          yum install ntpdate -y
          ntpdate  time.windows.com

----------------------前8步是操作系统的初始化操作的-----------------------------

----009):安装docker
         systemctl start  docker
         systemctl enable docker
 
----010):添加阿里云YUM软件源 + 安装kubeadm, kubelet和kubectl 由于版本更新频繁；这里指定版本号部署：
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF
 
yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0 
systemctl enable kubelet

 

  
----011):  ！！！仅仅master节点执行
          kubeadm init  --apiserver-advertise-address=192.168.13.137  --image-repository registry.aliyuncs.com/google_containers  --kubernetes-version v1.18.0  --service-cidr=10.96.0.0/12  --pod-network-cidr=10.244.0.0/16  

你需要执行下面步骤
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

查看运行节点
kubectl get node

----012): ！！！仅仅node节点执行
kubeadm join 192.168.13.137:6443 --token a5essn.s8mcoa70syle85pt \
    --discovery-token-ca-cert-hash sha256:a1c4f35db0c81c82b11d45530aeea8924bf28b930bbc5a657f504d6335523eb9
    
    
----013):部署 CNI网络插件  ！！！仅仅master节点执行
1：kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
2：如果上门的方式连不上  可以执行下载后的文件  kubectl apply -f ./kube-flannel.yml             
                 
kubectl get pods -n kube-system 
kubectl get node     

----014):部署完成

******************kubeadm init 初始化工作：
1：[preflight]环境检查  拉取镜像 kubeadm config images pull
2:[certs] 生成k8s证书 和etcd证书 ./etc/kubernetes/pki
3:[kubeconfig] 生成kubeconfig文件
4:[kubelet-start]生成kubelet配置文件
5:[control-plane]部署管理节点组件，用镜像启动容器， kubectl get pods -n kube-system
6:[etcd] 部署etcd数据库，用镜像启动容器
7:[upload-config][kubelet][upload-certs]上传配置文件到k8s中
8:[mark-control-plane]给管理接节点增加一个标签 node-role.kubeletes.io/master ='' ,再添加一个污点[node-role.kubernetes.io/master:NoSchedule]
9:[bootstrap-token]自动为kubelete 颁发证书
10:[addons]部署插件，CoreNDS,kube-proxy




*********************************************************************************
                              方式2：二进制 搭建k8s 
*********************************************************************************

  步骤：   
  1：创建多虚拟机，安装linux操作系统
  2：操作系统初始化
  3：为etcd和apiserver 自签证书
  4：部署etcd集群
  5：部署master组件  kube-apiserver  kube-controller-manager kube-scheduler etcd 
  6：部署node组件    kubelet kube-proxy  docker etcd
  7：部署集群网络    
  
  
  
  
  
  


